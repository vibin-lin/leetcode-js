/**
 * 冒泡排序是一种简单的排序算法。 
 * 它重复地走访过要排序的数列， 一次比较两个元素， 如果它们的顺序错误就把它们交换过来。 
 * 走访数列的工作是重复地进行直到没有再需要交换， 也就是说该数列已经排序完成。 
 * 这个算法的名字由来是因为越小的元素会经由交换慢慢“ 浮” 到数列的顶端。
 * 
 * 具体描述
 * 1. 比较相邻的元素。 如果第一个比第二个大， 就交换它们两个;
 * 2. 对每一对相邻元素作同样的工作， 从开始第一对到结尾的最后一对， 这样在最后的元素应该会是最大的数;
 * 3. 针对所有的元素重复以上的步骤， 除了最后一个;
 * 4. 重复步骤1~3， 直到排序完成。
 */

// 依次比较相邻的两个数，如果不符合排序规则，则调换两个数的位置。这样一遍比较下来，能够保证最大（或最小）的数排在最后一位。
// 再对最后一位以外的数组，重复前面的过程，直至全部排序完成。

let arr = [99, 1, 3, 4, 2, 12, 33, 11, 22, 91, 60, 96, 7, 35, 65, 10, 65, 9, 30, 20, 31, 77, 81, 24];
function BubbleSort(arr) {
    console.time('普通冒泡排序耗时');
    let len = arr.length;
    for (let i = 0; i < arr.length; i++) { //循环数组中每一个值
        for (let j = 0, stop = len - 1 - j; j < stop; j++) {
            // > 从小到大排序
            // < 从大到小排序
            if (arr[j] > arr[j + 1]) {
                let temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp
            }
        }
    }
    console.log(arr)
    console.timeEnd('普通冒泡排序耗时');
    return arr
}
BubbleSort(arr)





